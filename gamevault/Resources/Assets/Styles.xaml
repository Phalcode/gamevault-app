<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                     xmlns:local="clr-namespace:gamevault.UserControls">
    <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
        <Setter Property="Control.Template" Value="{x:Null}"/>
    </Style>


    <DataTemplate DataType="{x:Type mah:HamburgerMenuGlyphItem}">
        <Grid x:Name="IconPart" HorizontalAlignment="Left"
              Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength}">
            <Image Margin="7"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 Source="{Binding Glyph}" />
        </Grid>

    </DataTemplate>
    <DataTemplate x:Key="HamburgerMenuItem" DataType="{x:Type mah:HamburgerMenuIconItem}">
        <DockPanel Height="48" LastChildFill="True">
            <ContentControl x:Name="IconPart"
                        Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength}"
                        Content="{Binding Icon}"
                        DockPanel.Dock="Left"
                        Focusable="False"
                        IsTabStop="False" />
            <TextBlock x:Name="TextPart"
                   VerticalAlignment="Center"
                   FontSize="16"
                   Text="{Binding Label}" />
        </DockPanel>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=PanePlacement}" Value="Right">
                <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                <Setter TargetName="TextPart" Property="Margin" Value="8 0 0 0" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <Style x:Key="GameCardAnimation" TargetType="{x:Type Grid}">
        <Style.Setters>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:0.15"
                                
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="0.95"/>
                            <DoubleAnimation
                                Duration="0:0:0.15"
                                
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="0.95"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Duration="0:0:0.05"
                                
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                To="1"/>
                            <DoubleAnimation
                                Duration="0:0:0.05"
                               
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                                To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BaseToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Button}"/>
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Button}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="Padding" Value="5 6"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <mah:ClipBorder x:Name="Border" 
                                   Background="{TemplateBinding Background}" 
                                   BorderBrush="{TemplateBinding BorderBrush}" 
                                   BorderThickness="{TemplateBinding BorderThickness}" 
                                   CornerRadius="5" 
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <mah:ContentControlEx x:Name="PART_ContentPresenter" 
                                         ContentCharacterCasing="{Binding (mah:ControlsHelper.ContentCharacterCasing), RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                         ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                         ContentTemplate="{TemplateBinding ContentTemplate}" 
                                         Content="{TemplateBinding Content}" 
                                         ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" 
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                         Margin="{TemplateBinding BorderThickness}" 
                                         Padding="{TemplateBinding Padding}" 
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderThickness" TargetName="Border" Value="2"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{Binding (mah:ControlsHelper.MouseOverBorderBrush), Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="mah:ControlsHelper.CornerRadius" Value="3"/>
        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.Focus}"/>
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.Button.Border.MouseOver}"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.MouseOver}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent.MouseOver}"/>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Button.Pressed}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="HoverEffect" TargetType="{x:Type FrameworkElement}">
        <Style.Setters>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        </Style.Setters>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                            Duration="0:0:0.10"
                            
                            Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                            To="1.2"/>
                            <DoubleAnimation
                            Duration="0:0:0.10"
                            
                            Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                            To="1.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                            Duration="0:0:0.05"
                            
                            Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                            To="1"/>
                            <DoubleAnimation
                            Duration="0:0:0.05"
                           
                            Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleY)"
                            To="1"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="Button" x:Key="ButtonWrapper">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type local:IconButton}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Cursor" Value="Hand"/>
        <!--<Setter Property="FontWeight" Value="Bold"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconButton}">
                    <Grid>
                        <Border Name="Border" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <mah:ContentControlEx Name="PART_ContentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <mah:ContentControlEx.Content>
                                <StackPanel Orientation="Horizontal" Height="{TemplateBinding Height}">
                                    <Path Name="Icon" Data="{TemplateBinding Icon}" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5"/>
                                    <TextBlock Text="{TemplateBinding Text}" Foreground="{TemplateBinding Foreground}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" VerticalAlignment="Center"/>
                                </StackPanel>
                            </mah:ContentControlEx.Content>
                        </mah:ContentControlEx>
                        <Border Name="Disabled_Border" Visibility="Collapsed" CornerRadius="{TemplateBinding CornerRadius}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource GameVault.Brushes.Button.Disabled}" BorderBrush="{DynamicResource GameVault.Brushes.Button.Disabled}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Kind" Value="Primary">
                            <Setter Property="Background" Value="{DynamicResource GameVault.Brushes.Button}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GameVault.Brushes.Button}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="Kind" Value="Skeleton">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GameVault.Brushes.Button}" TargetName="Border"/>
                        </Trigger>
                        <Trigger Property="Kind" Value="Danger">
                            <Setter Property="Background" Value="IndianRed"/>
                            <Setter Property="BorderBrush" Value="IndianRed" TargetName="Border"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="Kind" Value="Primary" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource GameVault.Brushes.Button.MouseOver}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GameVault.Brushes.Button.MouseOver}" TargetName="Border"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="Kind" Value="Skeleton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource GameVault.Brushes.Button.MouseOver}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GameVault.Brushes.Button.MouseOver}" TargetName="Border"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="UIElement.IsMouseOver" Value="True" />
                                <Condition Property="Kind" Value="Danger" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="IndianRed" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="IndianRed" TargetName="Border"/>
                            <Setter Property="Opacity" Value="0.8" TargetName="Border"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Kind" Value="Primary" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource GameVault.Brushes.Button.Focus}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GameVault.Brushes.Button.Focus}" TargetName="Border"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Kind" Value="Skeleton" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource GameVault.Brushes.Button.Focus}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource GameVault.Brushes.Button.Focus}" TargetName="Border"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="Kind" Value="Danger" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="IndianRed" TargetName="Border"/>
                            <Setter Property="BorderBrush" Value="IndianRed" TargetName="Border"/>
                            <Setter Property="Opacity" Value="0.6" TargetName="Border"/>
                        </MultiTrigger>
                        <Trigger Property="OverrideIconTransform" Value="True">
                            <Setter TargetName="Icon" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="{Binding IconScale, RelativeSource={RelativeSource TemplatedParent}}"
                                                ScaleY="{Binding IconScale, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Icon" Property="Margin" Value="{Binding IconMargin, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Disabled_Border" Property="Visibility" Value="Visible" />
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent" TargetName="Border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextTurnAnimation" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MahApps.Styles.TextBlock}">
        <Style.Setters>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        </Style.Setters>
        <Style.Triggers>
            <EventTrigger RoutedEvent="TextBlock.MouseLeftButtonUp">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
                                Duration="0:0:0.1"                               
                                Storyboard.TargetProperty="(RenderTransform).(ScaleTransform.ScaleX)"
                                From="1" To="0" AutoReverse="True"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!--ComboBox-->
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Control.Border}" />
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="FontSize" Value="13" />
        <Setter Property="MinWidth" Value="150"/>
        <Setter Property="MinHeight" Value="35"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton
                            Cursor="Hand"
                            Name="ToggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ToggleButton">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition Width="32" />
                                                    </Grid.ColumnDefinitions>
                                                    <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"                         
                          Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="1" 
                        >
                                                        <Border.Style>
                                                            <Style TargetType="Border">
                                                                <Setter Property="CornerRadius" Value="8"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsChecked,RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" Value="True">
                                                                        <Setter Property="CornerRadius" Value="8,8,0,0"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>

                                                    <Path
                            x:Name="Arrow"
                            Grid.Column="1"    
                            Fill="{TemplateBinding Foreground}"
                            Stroke="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z"/>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>

                        <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,30,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"                            
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="3,3,23,3"
                            Focusable="True"                               
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border x:Name="PART_ContentHost" Focusable="True" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid
                              Name="DropDown"
                              SnapsToDevicePixels="True"               
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border
                                    CornerRadius="0,0,8,8"
                                    x:Name="DropDownBorder"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1,0,1,1"                                    
                                    />
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border
                        Name="Border"
                        Padding="5"
                        Margin="2"
                        BorderThickness="2,0,0,0"
                        CornerRadius="0"
                        Background="Transparent"
                        BorderBrush="Transparent">
                        <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}"/>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Expander Header-->
    <Style x:Key="CustomExpanderToggleButton" BasedOn="{StaticResource MahApps.Styles.ToggleButton.ExpanderHeader.Up}" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource MahApps.Brushes.Accent}" BorderThickness="4" CornerRadius="5" Margin="-2">
                        <Grid Margin="{TemplateBinding Padding}" Background="Transparent" SnapsToDevicePixels="False">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Path Name="Arrow" Margin="10,0,12,12" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M12 14.95q-.2 0-.375-.062t-.325-.213l-4.6-4.6q-.275-.275-.275-.7t.275-.7q.275-.275.7-.275t.7.275l3.9 3.9l3.9-3.9q.275-.275.7-.275t.7.275q.275.275.275.7t-.275.7l-4.6 4.6q-.15.15-.325.213T12 14.95" RenderTransformOrigin="0.5, 0.5" SnapsToDevicePixels="false" Fill="{DynamicResource MahApps.Brushes.IdealForeground}" >
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="1.8" ScaleY="1.8"/>
                                </Path.RenderTransform>
                            </Path>
                            <mah:ContentControlEx Grid.Column="1" Margin="4 0 0 0" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mah:ControlsHelper.ContentCharacterCasing)}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="true">
                            <Setter TargetName="Arrow" Property="Data" Value="m12 10.775l-3.9 3.9q-.275.275-.7.275t-.7-.275q-.275-.275-.275-.7t.275-.7l4.6-4.6q.15-.15.325-.213T12 8.4q.2 0 .375.063t.325.212l4.6 4.6q.275.275.275.7t-.275.7q-.275.275-.7.275t-.7-.275z" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                            <Setter TargetName="Arrow" Value="0.6" Property="Opacity" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Arrow" Value="0.4" Property="Opacity" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MahApps.Styles.Thumb.ScrollBar" TargetType="{x:Type Thumb}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Thumb}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ThumbVisual" Property="UIElement.Opacity" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <Grid Name="ThumbVisual">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" Storyboard="{StaticResource MahApps.Storyboard.ScrollBarThumbMouseOver}" />
                                <VisualState x:Name="Pressed" Storyboard="{StaticResource MahApps.Storyboard.ScrollBarThumbPressed}" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Name="Background" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5"/>
                        <Border Name="MouseOverRectangle" Background="{DynamicResource MahApps.Brushes.ThemeForeground}" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5"/>
                        <Border Name="PressedRectangle" Background="{DynamicResource MahApps.Brushes.ThemeForeground}" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SecondaryScrollView" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.ColumnSpan="2" Grid.RowSpan="2"/>
                        <ScrollBar Name="PART_VerticalScrollBar"
                                
                                 HorizontalAlignment="Right"
                                 Opacity="0.5" 
                                 Grid.Column="1"
                                 Value="{TemplateBinding VerticalOffset}"
                                 Maximum="{TemplateBinding ScrollableHeight}"
                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                                                                               
                                 VerticalAlignment="Bottom"
                                 Orientation="Horizontal"
                                 Opacity="0.5"
                                 Grid.Row="1"
                                 Value="{TemplateBinding HorizontalOffset}"
                                 Maximum="{TemplateBinding ScrollableWidth}"
                                 ViewportSize="{TemplateBinding ViewportWidth}"
                                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel>
                        <TextBlock Foreground="Red" FontSize="12" FontWeight="Bold" Text="{Binding [0].ErrorContent}" Margin="0,0,0,1" HorizontalAlignment="Right" DockPanel.Dock="Top"/>
                        <Border BorderBrush="Red" BorderThickness="2" CornerRadius="5">
                            <AdornedElementPlaceholder Margin="-2"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
        <!--<Setter Property="BorderBrush" Value="RED" />-->
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="CaretBrush" Value="{DynamicResource MahApps.Brushes.ThemeForeground}" />
        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="TextBoxBase.SelectionBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Border Name="Base" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource MahApps.Brushes.TextBox.Border}" BorderThickness="1" CornerRadius="5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Grid Name="PART_InnerGrid" Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Name="TextColumn" Width="*" />
                                <ColumnDefinition Name="ButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Name="ButtonRow" Height="*" />
                            </Grid.RowDefinitions>
                            <ScrollViewer Name="PART_ContentHost" Grid.Row="1" Grid.Column="0" Margin="0" Padding="{TemplateBinding Padding}" VerticalAlignment="Stretch" BorderThickness="0" IsTabStop="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Background="{x:Null}" BorderBrush="{x:Null}"/>
                            <TextBlock Name="PART_Message" Grid.Row="1" Grid.Column="0" Margin="4 0" Padding="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Foreground="{TemplateBinding Foreground}" Style="{DynamicResource MahApps.Styles.TextBlock.Watermark}" Text="Search..." TextAlignment="Center" TextTrimming="None" TextWrapping="NoWrap" Visibility="Collapsed"/>
                            <Border Name="PART_ClearTextBorder" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Width="25" BorderThickness="1" CornerRadius="5" SnapsToDevicePixels="False">
                                <Button Name="PART_ClearText" FontSize="15" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" Focusable="False" IsTabStop="False" Style="{DynamicResource MahApps.Styles.Button.Chromeless}">
                                    <Button.Content>
                                        <Path Name="ClearText_Icon" Margin="4" Stretch="Fill" Data="m11.25 4.75l-6.5 6.5m0-6.5l6.5 6.5" Fill="{DynamicResource MahApps.Brushes.Control.Border}" Stroke="{DynamicResource MahApps.Brushes.Control.Border}"  StrokeThickness="3"/>
                                    </Button.Content>
                                </Button>
                            </Border>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="Base" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsFocused" Value="True">
                            <Setter TargetName="PART_Message" Property="Opacity" Value="0.4"/>
                            <Setter TargetName="Base" Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}"/>
                        </Trigger>
                        <Trigger Property="Text" Value="">
                            <Setter TargetName="PART_Message" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ClearText" Property="IsHitTestVisible" Value="False"/>
                            <Setter TargetName="ClearText_Icon" Property="Data" Value="M42.5,22A12.5,12.5 0 0,1 55,34.5A12.5,12.5 0 0,1 42.5,47C40.14,47 37.92,46.34 36,45.24L26.97,54.27C25.8,55.44 23.9,55.44 22.73,54.27C21.56,53.1 21.56,51.2 22.73,50.03L31.8,40.96C30.66,39.08 30,36.86 30,34.5A12.5,12.5 0 0,1 42.5,22M42.5,26A8.5,8.5 0 0,0 34,34.5A8.5,8.5 0 0,0 42.5,43A8.5,8.5 0 0,0 51,34.5A8.5,8.5 0 0,0 42.5,26Z"/>
                            <Setter TargetName="ClearText_Icon" Property="Stroke" Value="{x:Null}"/>
                        </Trigger>
                        <Trigger SourceName="PART_ClearText" Property="IsPressed" Value="True">
                            <Setter Property="Text" Value="" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="{x:Type mah:NumericUpDown}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ContextMenu" Value="{DynamicResource MahApps.TextBox.ContextMenu}"/>

        <Setter Property="FontFamily" Value="{DynamicResource MahApps.Fonts.Family.Control}"/>
        <Setter Property="FontSize" Value="{DynamicResource MahApps.Font.Size.Content}"/>
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="MinWidth" Value="62"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type mah:NumericUpDown}">
                    <Grid SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border x:Name="Base" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Grid Margin="{TemplateBinding BorderThickness}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="PART_LeftColumn" Width="*"/>
                                <ColumnDefinition x:Name="PART_MiddleColumn" Width="Auto"/>
                                <ColumnDefinition x:Name="PART_RightColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox x:Name="PART_TextBox" Background="{x:Null}" BorderThickness="0" ContextMenu="{TemplateBinding ContextMenu}" Grid.Column="0" Foreground="{TemplateBinding Foreground}"  FontFamily="{TemplateBinding FontFamily}" Focusable="{TemplateBinding Focusable}" FontSize="{TemplateBinding FontSize}" HorizontalScrollBarVisibility="Hidden" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="True" IsHitTestVisible="False" IsTabStop="{TemplateBinding IsTabStop}" Margin="0" MinWidth="20" MinHeight="0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TabIndex="{TemplateBinding TabIndex}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" VerticalScrollBarVisibility="Hidden"/>
                            <RepeatButton x:Name="PART_NumericUp" Grid.Column="1" Cursor="Hand" Delay="{TemplateBinding Delay}" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding UpDownButtonsFocusable}" IsTabStop="False" Margin="0" Style="{DynamicResource MahApps.Styles.Button.Chromeless}" Width="{TemplateBinding UpDownButtonsWidth}">
                                <Path x:Name="PolygonUp" Data="F1 M 35,19 L 41,19 41,35 57,35 57,41 41,41 41,57 35,57 35,41 19,41 19,35 35,35 35,19 Z" Fill="{TemplateBinding Foreground}" Height="14" Stretch="Fill" Width="14"/>
                            </RepeatButton>
                            <RepeatButton x:Name="PART_NumericDown" Grid.Column="2" Cursor="Hand" Delay="{TemplateBinding Delay}" Foreground="{TemplateBinding Foreground}" Focusable="{TemplateBinding UpDownButtonsFocusable}" IsTabStop="False" Margin="0" Style="{DynamicResource MahApps.Styles.Button.Chromeless}" VerticalContentAlignment="Center" Width="{TemplateBinding UpDownButtonsWidth}">
                                <Path x:Name="PolygonDown" Data="F1 M 19,38 L 57,38 57,44 19,44 19,38 Z" Fill="{TemplateBinding Foreground}" Height="3" Stretch="Fill" Width="14"/>
                            </RepeatButton>
                        </Grid>
                        <Border x:Name="DisabledVisualElement" Background="{DynamicResource GameVault.Brushes.Button.Disabled}" BorderBrush="{DynamicResource MahApps.Brushes.Control.Disabled}" BorderThickness="{TemplateBinding BorderThickness}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (mah:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" CornerRadius="5"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonsAlignment" Value="Left"/>
                                <Condition Property="SwitchUpDownButtons" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" TargetName="PART_LeftColumn" Value="Auto"/>
                            <Setter Property="Width" TargetName="PART_MiddleColumn" Value="Auto"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericDown" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericUp" Value="0"/>
                            <Setter Property="Width" TargetName="PART_RightColumn" Value="*"/>
                            <Setter Property="Grid.Column" TargetName="PART_TextBox" Value="2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonsAlignment" Value="Left"/>
                                <Condition Property="SwitchUpDownButtons" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" TargetName="PART_LeftColumn" Value="Auto"/>
                            <Setter Property="Width" TargetName="PART_MiddleColumn" Value="Auto"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericDown" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericUp" Value="1"/>
                            <Setter Property="Width" TargetName="PART_RightColumn" Value="*"/>
                            <Setter Property="Grid.Column" TargetName="PART_TextBox" Value="2"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonsAlignment" Value="Opposite"/>
                                <Condition Property="SwitchUpDownButtons" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" TargetName="PART_LeftColumn" Value="Auto"/>
                            <Setter Property="Width" TargetName="PART_MiddleColumn" Value="*"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericDown" Value="2"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericUp" Value="0"/>
                            <Setter Property="Width" TargetName="PART_RightColumn" Value="Auto"/>
                            <Setter Property="Grid.Column" TargetName="PART_TextBox" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonsAlignment" Value="Opposite"/>
                                <Condition Property="SwitchUpDownButtons" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" TargetName="PART_LeftColumn" Value="Auto"/>
                            <Setter Property="Width" TargetName="PART_MiddleColumn" Value="*"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericDown" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericUp" Value="2"/>
                            <Setter Property="Width" TargetName="PART_RightColumn" Value="Auto"/>
                            <Setter Property="Grid.Column" TargetName="PART_TextBox" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ButtonsAlignment" Value="Right"/>
                                <Condition Property="SwitchUpDownButtons" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Width" TargetName="PART_LeftColumn" Value="*"/>
                            <Setter Property="Width" TargetName="PART_MiddleColumn" Value="Auto"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericDown" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="PART_NumericUp" Value="2"/>
                            <Setter Property="Width" TargetName="PART_RightColumn" Value="Auto"/>
                            <Setter Property="Grid.Column" TargetName="PART_TextBox" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="InterceptArrowKeys" Value="False"/>
                            <Setter Property="InterceptManualEnter" Value="False"/>
                            <Setter Property="InterceptMouseWheel" Value="False"/>
                            <Setter Property="IsEnabled" TargetName="PART_NumericDown" Value="False"/>
                            <Setter Property="IsEnabled" TargetName="PART_NumericUp" Value="False"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="False"/>
                                <Condition Property="InterceptManualEnter" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsReadOnly" TargetName="PART_TextBox" Value="True"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_NumericUp" Value="True">
                            <!--<Setter Property="Background" TargetName="PART_NumericUp" Value="{DynamicResource MahApps.Brushes.Gray8}"/>-->
                            <Setter Property="Fill" TargetName="PolygonUp" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_NumericUp" Value="True">
                            <!--<Setter Property="Background" TargetName="PART_NumericUp" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>-->
                            <Setter Property="Fill" TargetName="PolygonUp" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_NumericDown" Value="True">
                            <!--<Setter Property="Background" TargetName="PART_NumericDown" Value="{DynamicResource MahApps.Brushes.Gray8}"/>-->
                            <Setter Property="Fill" TargetName="PolygonDown" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_NumericDown" Value="True">
                            <!--<Setter Property="Background" TargetName="PART_NumericDown" Value="{DynamicResource MahApps.Brushes.ThemeForeground}"/>-->
                            <Setter Property="Fill" TargetName="PolygonDown" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (mah:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" SourceName="PART_TextBox" Value="true">
                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (mah:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="HideUpDownButtons" Value="True">
                            <Setter Property="Visibility" TargetName="PART_NumericDown" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="PART_NumericUp" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TextAlignment" Value="Right"/>
        <Setter Property="UpDownButtonsWidth" Value="22"/>
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource MahApps.Templates.ValidationError}"/>
        <Setter Property="mah:ControlsHelper.FocusBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.Focus}"/>
        <Setter Property="mah:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource MahApps.Brushes.TextBox.Border.MouseOver}"/>
        <Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="{DynamicResource MahApps.Font.Size.Button.ClearText}"/>
        <Setter Property="mah:TextBoxHelper.ButtonWidth" Value="22"/>
        <Setter Property="mah:TextBoxHelper.IsMonitoring" Value="True"/>
        <Setter Property="mah:TextBoxHelper.WatermarkAlignment" Value="Right"/>
    </Style>

</ResourceDictionary>